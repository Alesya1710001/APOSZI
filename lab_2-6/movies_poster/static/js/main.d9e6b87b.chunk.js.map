{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","setMovies","useEffect","axios","method","url","then","response","data","className","class","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","tabindex","aria-disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAiDeA,MA3Cf,WAAe,IAAD,EAEgBC,mBAAS,IAFzB,mBAEGC,GAFH,WAaZ,OATEC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,gCACNC,MAAK,SAAAC,GACJN,EAAUM,EAASC,WAExB,IAGH,qBAAKC,UAAU,MAAf,SACI,qBAAKC,MAAM,gDAAX,SACM,sBAAKA,MAAM,kBAAX,UACE,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,oBACA,wBAAQD,MAAM,iBAAiBE,KAAK,SAASC,iBAAe,WAAWC,iBAAe,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAA9J,SACE,sBAAMP,MAAM,0BAEd,qBAAKA,MAAM,2BAA2BQ,GAAG,YAAzC,SACE,qBAAIR,MAAM,aAAV,UACE,oBAAIA,MAAM,WAAV,SACE,mBAAGA,MAAM,kBAAkBS,eAAa,OAAOR,KAAK,IAApD,oBAEF,oBAAID,MAAM,WAAV,SACE,mBAAGA,MAAM,WAAWC,KAAK,IAAzB,wBAEF,oBAAID,MAAM,WAAV,SACE,mBAAGA,MAAM,WAAWC,KAAK,IAAzB,uBAEF,oBAAID,MAAM,WAAV,SACE,mBAAGA,MAAM,oBAAoBC,KAAK,IAAIS,SAAS,KAAKC,gBAAc,OAAlE,qCC3BPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d9e6b87b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App(){\n\n    const[movie, setMovies] = useState([])\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: \"http://127.0.0.1:8000/test/\"\n        }).then(response =>{\n            setMovies(response.data)\n        })\n    }, [])\n\n  return (\n    <div className=\"App\">\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <div class=\"container-fluid\">\n                <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                  <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                  <ul class=\"navbar-nav\">\n                    <li class=\"nav-item\">\n                      <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                    </li>\n                    <li class=\"nav-item\">\n                      <a class=\"nav-link\" href=\"#\">Features</a>\n                    </li>\n                    <li class=\"nav-item\">\n                      <a class=\"nav-link\" href=\"#\">Pricing</a>\n                    </li>\n                    <li class=\"nav-item\">\n                      <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </nav>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}